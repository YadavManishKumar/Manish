use Mavenmovies;
-- Rank the customers based on the total amount they've spent on rentals.
select * from payment;
select customer_id,total_spent,rank() over(order by total_spent desc) from 
(
select customer_id,sum(amount) as total_spent from payment group by customer_id
) as Customer_Totals;
-- 	Calculate the cumulative revenue generated by each film over time
select film_id,title,rental_date,amount,
sum(amount) over(partition by film_id order by rental_date) as cumulative_revenue
From(select f.film_id,f.title,r.rental_date,amount from film f join inventory i on f.film_id=i.film_id
join rental r on i.inventory_id=r.inventory_id
join payment p on r.rental_id=p.rental_id) as film_revenue;


-- Determine the average rental duration for each film, considering films with similar lengths
SELECT film_id, title, rental_duration,
AVG(rental_duration) OVER (PARTITION BY rental_duration) AS avg_rental_duration
FROM film;

-- Identify the top 3 films in each category based on their rental counts.

SELECT category_id, film_id, title, rental_count,
RANK() OVER (PARTITION BY category_id ORDER BY rental_count DESC) AS
rank_in_category
FROM (
SELECT fc.category_id, f.film_id, f.title, COUNT(r.rental_id) AS rental_count
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY fc.category_id, f.film_id, f.title
) AS category_film_rentals
where rank_in_category <= 3;




